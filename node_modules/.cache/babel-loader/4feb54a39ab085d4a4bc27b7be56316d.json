{"ast":null,"code":"var _jsxFileName = \"/Users/meredith/Desktop/website/src/CrochetMatic.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport threecol from './imgs/crochetmatic.jpg';\nimport onecolblender from './imgs/crochetmatic-blender-onecol.png';\nimport twocolblender from './imgs/crochetmatic-blender-twocol.png';\nimport threecolblender from './imgs/crochetmatic-blender-threecol.png';\nimport threecolsim from './imgs/crochetmatic-3col.png';\n\nclass Crochetmatic extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App-body-project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"CrochetMatic\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Jan. \\u2013 Aug. 2019\"), React.createElement(\"input\", {\n      type: \"image\",\n      src: threecol,\n      alt: \"Three Column Simulation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Introduction\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"CrochetMatic is a novel volumetric knitting machine that can construct knitted 3D geometries in layers. I worked on modelling these geometric input models for simulation, developing a 3D stitch mesh-like language with a respective Blender model for each stitch that can be outputted as a polyline and converted to a B-spline for simulation of the CrochetMatic model.\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Overview\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"1. Designing 3D Stitch Models\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), \"2. Converting Polylines to B-Splines\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), \"3. Results\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), \"This project was done in collaboration with Steve Marschner. We also worked with Fran\\xE7ois Guimbreti\\xE8re and Amrit Kwatra, who worked on building the physical CrochetMatic system. The project is still on-going, and there is still a lot more to explore regarding more complicated 3D knitted models.\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Designing 3D Stitch Models\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Inspired by 3D stitch meshes, I worked on modeling each individual stitch in Blender, designing an input language to determine physical compatibility. Since a proposed CrochetMatic model needs to be connected via one piece of yarn, I also made a script that checked the model for connectivity. Below are screenshots of a one-column, two-column, and three-column models in Blender.\"), React.createElement(\"div\", {\n      className: \"App-body-surfacebrush-imgs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"image\",\n      src: onecolblender,\n      alt: \"One Column Blender Model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"image\",\n      src: twocolblender,\n      alt: \"Two Column Blender Model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"image\",\n      src: threecolblender,\n      alt: \"Three Column Blender Model\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Converting Polylines to B-Splines\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Since the input models for the simulator required a B-spline format, I wrote a short script to convert the stitch polyline models from Blender into B-splines, and from .obj to .ys format.\"), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Results\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Once I had the block models in the compatible B-spline format for the yarnsim simulator, developed by PhD students in the lab, I ran the simulation with my CrochetMatic inputs. The three column model is shown below.\"), React.createElement(\"input\", {\n      type: \"image\",\n      src: threecolsim,\n      alt: \"Three Column Simulation\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-body-project-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/portalware\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"\\u2039 Previous: Portalware\")), React.createElement(Link, {\n      to: \"/work\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Back to Portfolio\")), React.createElement(Link, {\n      to: \"/surfacebrush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Next Up: SurfaceBrush \\u203A\"))));\n  }\n\n}\n\nexport default Crochetmatic;","map":{"version":3,"sources":["/Users/meredith/Desktop/website/src/CrochetMatic.jsx"],"names":["React","Component","Link","threecol","onecolblender","twocolblender","threecolblender","threecolsim","Crochetmatic","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport threecol from './imgs/crochetmatic.jpg';\nimport onecolblender from './imgs/crochetmatic-blender-onecol.png';\nimport twocolblender from './imgs/crochetmatic-blender-twocol.png';\nimport threecolblender from './imgs/crochetmatic-blender-threecol.png';\nimport threecolsim from './imgs/crochetmatic-3col.png';\n\nclass Crochetmatic extends Component {\n  render() {\n    return (\n      <div className=\"App-body-project\">\n        <h2>CrochetMatic</h2>\n        <h3>Jan. – Aug. 2019</h3>\n        <input type=\"image\" src={threecol} alt=\"Three Column Simulation\"/>\n        <h4>Introduction</h4>\n        <p>CrochetMatic is a novel volumetric knitting machine that can\n          construct knitted 3D geometries in layers. I worked on modelling these\n          geometric input models for simulation, developing a 3D stitch\n          mesh-like language with a respective Blender model for each stitch\n          that can be outputted as a polyline and converted to a B-spline for\n          simulation of the CrochetMatic model.\n        </p>\n        <h4>Overview</h4>\n        <p>1. Designing 3D Stitch Models<br />\n          2. Converting Polylines to B-Splines<br />\n          3. Results<br /><br />\n          This project was done in collaboration with Steve Marschner. We also\n          worked with François Guimbretière and Amrit Kwatra, who worked on\n          building the physical CrochetMatic system. The project is still\n          on-going, and there is still a lot more to explore regarding more\n          complicated 3D knitted models.\n        </p>\n        <h4>Designing 3D Stitch Models</h4>\n        <p>Inspired by 3D stitch meshes, I worked on modeling each individual\n          stitch in Blender, designing an input language to determine physical\n          compatibility. Since a proposed CrochetMatic model needs to be\n          connected via one piece of yarn, I also made a script that checked the\n          model for connectivity. Below are screenshots of a one-column,\n          two-column, and three-column models in Blender.\n        </p>\n        <div className=\"App-body-surfacebrush-imgs\">\n          <input type=\"image\" src={onecolblender} alt=\"One Column Blender Model\"/>\n          <input type=\"image\" src={twocolblender} alt=\"Two Column Blender Model\"/>\n          <input type=\"image\" src={threecolblender} alt=\"Three Column Blender Model\"/>\n        </div>\n        <h4>Converting Polylines to B-Splines</h4>\n        <p>Since the input models for the simulator required a B-spline format,\n          I wrote a short script to convert the stitch polyline models from\n          Blender into B-splines, and from .obj to .ys format.\n        </p>\n        <h4>Results</h4>\n        <p>Once I had the block models in the compatible B-spline format for the\n          yarnsim simulator, developed by PhD students in the lab, I ran the\n          simulation with my CrochetMatic inputs. The three column model is\n          shown below.\n        </p>\n        <input type=\"image\" src={threecolsim} alt=\"Three Column Simulation\"/>\n        <div className=\"App-body-project-buttons\">\n          <Link to=\"/portalware\">\n            <button type=\"button\">\n              &#8249; Previous: Portalware\n            </button>\n          </Link>\n          <Link to=\"/work\">\n            <button type=\"button\">\n              Back to Portfolio\n            </button>\n          </Link>\n          <Link to=\"/surfacebrush\">\n            <button type=\"button\">\n              Next Up: SurfaceBrush &#8250;\n            </button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Crochetmatic;\n"]},"metadata":{},"sourceType":"module"}